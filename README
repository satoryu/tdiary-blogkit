See README.en if you cannot read Japanese.




-- tDiary BlogKit: tDiaryをblog風に運用する --

■はじめに
　tDiary BlogKitは、tDiaryをweblogのように日単位でなく記事単位で管理
するシステムに改造するキットです。BlogKitを全面的に適用したtDiaryは、
日記システムとしてのtDiaryに対して、以下のような違いを持ちます。

- 日付が意味を持たなくなる(記事番号扱いになる)
- 記事に「最終更新時刻(Last-Modified)」が付くようになる
- リスト表示時には、記事の最初のセクションだけが表示される(似非サマリ)
- 「更新」を選ぶと、自動的に空いている記事番号を割り当ててくれる
- Recent EntoriesやWhat's Newで更新情報が公開される
- なにやら英語っぽい表記になる

　tDiary BlogKitは、tDiaryには影響を与えずに、すべてファイル追加のみ
で導入できます。

■インストール
　すでにtDiaryはインストール済みだとします。tDiaryは2.1.1もしくはそ
れ以降のできるだけ新しいものを推奨します。すでに運用中の日記ではなく、
新たにblog系サイトを作るという前提で説明します。すでに運用中の日記に
適用する場合には、tdiary.confのマージ作業などが必要になります。

1. tdiary.confを作成
  付属のtdiary.conf.sampleを、tDiaryのインストールディレクトリにtdiary.conf
  としてコピーします。そして、@data_pathをデータの保存場所に書き換え
  ます。詳しくはtDiaryのドキュメントを参照してください。
  付属のサンプルには、ヘッダやフッタなどにblog風のレイアウト指定が施さ
  れています。これらのカスタマイズは、運用開始後に設定画面から行ってく
  ださい。
  ※tdiary.conf.sample_jaは日本語向けのサンプルです。

2. スタイルをコピー
  tdiary/blog_style.rbを、tDiaryインストールディレクトリのtdiaryの下に
  コピーします。上のtdiary.confに「@style = 'Blog'」の指定があるはずな
  ので、確認してください。

  なお、Wikiスタイルで記述したい場合には、tDiary本体付属のWikiスタイル
  を導入した上で、blogwiki_style.rbをtdiary下にコピーし、@styleには
  'BlogWiki'を指定します。

  同様に、RDスタイルで記述したい場合には、tDiary本体付属のRDスタイルを
  導入した上で、blogrd_style.rbをtdiary下にコピーし、@styleには'BlogRD'
  を指定します。

2. テーマをコピー
  theme/blogを、tDiaryのインストールディレクトリにあるthemeにコピーしま
  す。このblogテーマはtDiaryの標準的テーマですが、サイドバーを使ったレイ
  アウトのための設定や、blog用プラグインのための設定が追加されています。

3. プラグインの設定
  tDiary 2.0.1からは、プラグイン選択が設定画面からできるようになっていま
  す。BlogKit専用のプラグインも、ここから選択できるようにします。プラグイ
  ン選択がBlogKitを展開したディレクトリを参照できるように、tdiary.confに
  ある以下の設定を修正してください。

    @options['sp.path'] = ['misc/plugin', 'blogkit/plugin']
  
  このオプションは複数のパスを指定できます。ひとつ目はtDiaryのプラグイン
  集のパスを指定してあるので、ふたつ目をBlogKitで配布されているプラグイン
  のパスにしてあります。

  もちろん、tDiaryのpluginパスに、必要なプラグインをコピーする従来のイン
  ストール方法でもかまいません。

4. あとはtDiary同様に動かすだけ
  記事を追加するときには、画面下の「Update」をクリックします。日付は最新
  のものが自動的に入るので、「Update」時には常に新しい記事の追加になりま
  す。また、既存の記事の編集は、その記事を開いてから画面下の「Edit」をク
  リックすることで行えます。

  まず最初に、設定画面に入って、必要なプラグインを選択しましょう。

■プラグイン解説
　ここでは各プラグインの概要のみ解説します。指定方法などは個々のプラグイ
ンファイルを見てください。

1. archive.rb
  1.1 archiveプラグイン
    過去記事一覧を表示します。サイドバーにデフォルトで配置されています。
    記事はグループ化されており(ようするに月単位ですが、BlogKitでは日付に
    意味がないので00001からの連番です)、新しい順に表示します。

  1.2 archive_dropdownプラグイン
    archiveと同様の一覧を、ドロップダウンリストで表示します。

2. blog-style.rb
  tDiaryとはやや異なった用語を使うblogツールに合わせて、各所の文字列を置
  き換えるプラグインです。

3. lm.rb
  Last-Modifiedを表示するプラグインです。タイトル下か、記事最下部のどちら
  に表示するか、tdiary.confで選択可能です。

4. recent-entry.rb
  4.1 recent-entryプラグイン
    最新の記事一覧を、新しい順に表示します。このプラグインはrecent-entry2
    とは排他です。どちらか一方を選択してください。
    こちらのrecent-entryは、secureモードでも動く軽量版ですが、最新表示の場
    合にしか正しい表示を行えません。最新表示でのみサイドバーを表示するので
    あれば、こちらを使います。

5. recent-entry2.rb
  5.1 recent-entryプラグイン
    最新の記事一覧を、新しい順に表示します。このプラグインはrecent-entryと
    は排他です。どちらか一方を選択してください。
    こちらのrecent-entryは、secureモードででは動きませんが、月別・記事別表
    示でも常に正しいリストを表示します。最新表示以外でもサイドバーを表示す
    るのであれば、こちらを使います。

6. title-navi.rb
  tDiaryでは「前日」「翌日」になっていたナビゲーションボタンを、記事のタイ
  トルで置き換えます。ただし、月をまたぐ場合には、「Prev」「Next」という表
  記になります。

7. whatsnew-list.rb
  7.1 whatsnew-listプラグイン
    記事が更新された順に一覧表示を行います。recent-entryと違い、過去の記事
    を更新しても上位に入れ替わります。secureモードでは動きません。
	 また、オプションの指定によって、RDFファイルを生成することが可能です。

8. blog-category.rb
  カテゴリ機能を追加します。タイトル中の [ ] で囲んだ文字列がカテゴリ名と
  して認識されます。カテゴリ名をクリックするとそのカテゴリの記事のみを表示
  する画面に移ります。
  設定画面からカテゴリインデックスの初期化を行う必要があります。

  8.1 blog_category_entryプラグイン
    カテゴリ別画面に表示しきれなかった記事のタイトルを新しい順に表示します。

  8.2 blog_category_formプラグイン
    表示するカテゴリを選択できるドロップダウンリストを表示します。

9. title-link.rb
  記事のタイトル全体をPermalinkへのリンクにします。従来のアンカー文字よりも
  Permalinkであることがよりわかりやすくなります。ただし、タイトル中にリンク
  を含めることができなくなりますので、運用に照らし合わせて使ってください。

■ライセンス
　GPLの元で改造、配布が可能です。作者はただただし<sho@spc.gr.jp>です。
BlogKitに関する最新情報は、http://www.tdiary.org/で得られます。
